

MORSE_MAP = {
    "._": "A", "_...": "B", "_._.": "C",
    "_..": "D", ".": "E", ".._.": "F",
    "__.": "G", "....": "H", "..": "I",
    ".___": "J", "_._": "K", "._..": "L",
    "__": "M", "_.": "N", "___": "O",
    ".__.": "P", "__._": "Q", "._.": "R",
    "...": "S", "_": "T", ".._": "U",
    "..._": "V", ".__": "W", "_.._": "X",
    "_.__": "Y", "__..": "Z",

    ".____": "1", "..___": "2", "...__": "3",
    "...._": "4", ".....": "5", "_....": "6",
    "__...": "7", "___..": "8", "____.": "9",
    "_____": "0",

    "._._._": ".", "__..__": ",", "..__..": "?",
    "___...": ":", "_._._.": ";", "_...._": "-",
    ".____.": "'", "_.._.": "/", "._.._.": '"',
    "_._.__": "!",
}

def translate(input: str) -> str:
    """ Returns the key equivalent of a morse written letter or number."""
    if input not in MORSE_MAP:
        return ""

    return MORSE_MAP[input]